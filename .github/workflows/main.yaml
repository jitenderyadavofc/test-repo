name: "Terraform plan and apply new"

on:
  push:
    branches:
         - main
         
env:
      ACTIONS_RUNNER_DEBUG: true
  
jobs:
  deploy:
         runs-on: "ubuntu-latest"

         steps:
           - name: checkout
             uses: actions/checkout@v2

           - name: "aws cli"
             run: |
               sudo apt-get update
               sudo apt-get install -y python3-pip
               pip3 install awscli --upgrade --user
               
           - name: configure AWS credentials
             run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }} && aws configure set default.region "us-east-1"

           - name: aws assume role
             run: | 
              aws sts assume-role --role-arn "arn:aws:iam::590183895361:role/access_role"  --role-session-name GitHubActionsSession > assume-role-output.json

           - name: cat assume file
             run: |
               cat assume-role-output.json

           - name: set up aws credentials for assumed role     
             run: |
                export AWS_ACCESS_KEY_ID="AROAYS2NTSFA3TVFZQNER:GitHubActionsSession"
                export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' assume-role-output.json)
                export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' assume-role-output.json)
                echo $AWS_ACCESS_KEY_ID
                echo $AWS_SECRET_ACCESS_KEY
                echo $GITHUB_WORKSPACE
                cd $GITHUB_WORKSPACE; ls -ltr

           - name: install zip
             run: |
               sudo apt update
               sudo apt install zip

           - name: zip the lambda funtion
             run: |
               zip -j lambda.zip lambda/*


           - name: list
             run: |
               cd $GITHUB_WORKSPACE; ls -ltr
               pwd 
               
           - name: upload artifact
             uses: actions/upload-artifact@v2
             with:
               name: lambda function zip
               path: lambda.zip

           - name: aws s3 list
             run: aws s3 ls

           - name: aws s3 copy
             run: aws s3api create-bucket --bucket "jitenderyadavlennarbucket" --region us-east-1

#           - name: update lambda
 #            run: |
 #              aws lambda update-function-code --function-name athenix-lambda-function-test --zip-file "fileb://lambda.zip"
